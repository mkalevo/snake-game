window.onload = function (){
    let canvas = document.getElementById("canvas");
    let context = canvas.getContext("2d")
    let x = 50
    let y = 200
    let points = 0 // Muokkaa myöhemmin 0000
    let coinx = Math.random() * (600-25)
    let coiny = Math.random() * (400-25)

    let t = Date.now()
    let speed = 200;
    var dir = 0

    let snake = [
        {x: 200, y: 200},
        {x: 190, y: 200},
        {x: 180, y: 200}
    ]

    //horizontal velocity
    let dx = 10;
    // vertical velocity
    let dy = 0;

    let up = document.getElementById('up')
    let right = document.getElementById('right')
    let left = document.getElementById('left')
    let down = document.getElementById('down')
    
    
    // 
    const move = () => { 
        //create head
        const head = {x: snake}
    }

    document.onkeydown = function(e) {
        console.log(e)
        console.log('direction: ' + dir)
        switch (e.key){ 
            case 'ArrowRight':    //right
                dir = 1
                break;
            case 'ArrowLeft':    //left
                dir = 2
               break;
            case 'ArrowDown':    //down
               dir = 3
               break;
            case 'ArrowUp':    //up
                dir = 4
                break;
            
        }
    }

    const clearCanvas = () => {}

    const drawSnakePart = (snakePart) => { 
        canvas.fillStyle = 'lightblue'
        canvas.strokestyle = 'black'
        canvas.fillRect(snakePart.x, snakePart.y, 10, 10)
        canvas.strokeRect(snakePart.x, snakePart.y, 10, 10)
    }

    const drawSnake = () => { snake.forEach(drawSnakePart)}

    const move_snake = () => {
        const head = {x: snake[0].x + dx, y: snake[0].y}
        snake.unshift(head) //unshift inserts new element at the start
        snake.pop() //remove the last element
    }

    const game_end = () => {
        for (let i = 4; i < snake.length; i++){
            const has_collided = snake[i].x === snake[0].x &&
            snake[i].y === snake[0].y
            if (has_collided){
                return true
            }
        }
    }

    const main = () => {

        if (game_end()) return;

        
    }
    

        /* PUUTTUVAT TOIMINNOT:

        1. Liikkuminen "Pixeleittäin" (eikä seinän sisällä)
            - madon koon mukaan (optimikoko??)
        2. Madon kasvattaminen
        3. Matoon törmääminen
        4. Pisteet canvaksen yläpuolelle
        5. Nokia 3310 Design
        6. Näppäimistö (3310) ja toiminnallisuudet
        7. Pisteet 0000
        8. benchmarkkaus originaaliin 3310 snakeen
        9. korjaukset ylemmän mukaan
        10. Muokkaa osat funktioiksi 
            - (const drawSnake =()=>)
            - const newFood = () =>
            -
                        
        
        */
    /*
    function draw() {
        let timePassed = (Date.now() - t) / 1000
        t = Date.now()
        let fps = Math.round( 1 / timePassed)

        context.clearRect(0, 0, 600, 400)

        context.font = '25px nokiafc22'
        context.fillStyle = 'black'
        context.fillText(points, 500, 30) //fps yläpuolelle
        context.fillText("FPS: " + fps, 20, 30)
        context.fillText('speed: ' + speed, 200, 30)

        context.beginPath()
        context.rect(x, y, snake[0].x, snake[0].y)
        context.fillStyle="rgb(40,40,40)";
        context.fill()

        context.beginPath()
        context.rect(coinx, coiny, 25, 25)
        context.fillStyle = "rgb(20,20,20)"
        context.fill()

        if(dir == 1){
            x += (speed * timePassed)
        }else if (dir == 2){
            x -= (speed * timePassed)
        }else if (dir == 3){
            y += (speed * timePassed)
        }else if (dir == 4){
            y -= (speed * timePassed)
        }

        if (x >= 600) {
            x = -100
        }else if (x <= -100){
            x = 600
        }else if (y >= 400){
            y = -100
        }else if (y <= -100){
            y = 400
        }

        if (coinx <= x+50 && x <= coinx+25 && 
            coiny <= y+50 && y <= coiny+25){
                points += 10;
                coinx = Math.random() * (600-25)
                coiny = Math.random() * (400-25)
                if (speed < 500)
                speed += 10
                //array snakeen uusi arvo
                snake.unshift({x: snake[0].x - 25, y: snake[0].y})
        }

        window.requestAnimationFrame(draw)
    }
    draw()
    */
}